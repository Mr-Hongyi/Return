@using Return.Application.RetrospectiveWorkflows.Commands
@using Return.Domain.ValueObjects
@inherits MediatorComponent

<RetrospectiveRolePanel>
    <Manager>
        <p>
            The next step is to discuss the notes that the team members wrote down. 
            Click the button below to reveal the notes. All notes will be locked.
        </p>

        <p class="has-text-centered">
            <button class="button is-primary is-large" type="button" @onclick="@Continue">
                <span class="fas fa-eye"></span> &nbsp;
                Continue
            </button>
        </p>
    </Manager>
    <Participant>
        <p>

        </p>
    </Participant>
</RetrospectiveRolePanel>

<WorkflowStatusTimer />

@code
{
    [CascadingParameter]
    public RetroIdentifier? RetroId { get; set; }

    private Task Continue()
    {
        if (this.RetroId == null)
        {
            return Task.CompletedTask;  // Shouldn't happen, but ignore
        }

        return this.Mediator.Send(new InitiateDiscussionStageCommand
        {
            RetroId = this.RetroId.StringId
        });
    }
}
