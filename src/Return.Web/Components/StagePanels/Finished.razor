@using Return.Application.Retrospectives.Queries.GetRetrospectiveStatus
@using Application.Common.Models;
@using Return.Web.Pages
<RetrospectiveRolePanel>
    <Facilitator>

        <textarea class="textarea note__content is-small has-fixed-size"
                  rows="3"
                  style="background-color:white;"
                  placeholder="Enter your action note here"
                  @bind-value="@TextData"
                  @bind-value:event="oninput"></textarea>

        <p>

        </p>

        <p class="has-text-centered">
            <button type="button"
                    class="button is-link is-outlined"
                    @onclick="@AddNote"
                    data-test-element-id="add-note-button">
                <span class="icon">
                    <span class="fas fa-plus-square"></span>
                </span>
                <span>
                    Create a note
                </span>
            </button>
        </p>

        <p>

        </p>

        <ul>
            @foreach (var Action in Finished.ActionList)
            {
                <li><b>@Action</b></li>
            }
        </ul>


        
    </Facilitator>
    <Participant>

        <ul>
            @foreach (var Action in Finished.ActionList)
            {
                <li><b>@Action</b></li>
            }
        </ul>

        <p>

        </p>


      
    </Participant>
</RetrospectiveRolePanel>

@if (this.RetrospectiveLobby != null)
{
    if (this.RetrospectiveLobby.ShowShowcase)
    {
        <button type="button"
                class="button is-link is-outlined full-width"
                data-test-element-id="toggle-view-button"
                @onclick="@(() => this.RetrospectiveLobby.ShowBoardDisplay())">
            <span class="icon"><span class="fas fa-columns"></span></span><span>Show full board</span>
        </button>
    }
    else
    {
        <button type="button"
                class="button is-link is-outlined full-width"
                data-test-element-id="toggle-view-button"
                @onclick="@(() => this.RetrospectiveLobby.ShowShowcaseDisplay())">
            <span class="icon"><span class="fas fa-list-ol"></span></span><span>Show top items</span>
        </button>
    }
}

@code {
#nullable disable
    [CascadingParameter]
    public IRetrospectiveLobby RetrospectiveLobby { get; set; }

    public String TextData;
    public static List<string> ActionList = new List<string>();

    public void AddNote()
    {
        Finished.ActionList.Add(this.TextData);
        this.TextData = "";
        this.StateHasChanged();
    }

}